{"id":"node_modules/mux.js/lib/utils/stream.js","dependencies":[{"name":"/Users/mdelano/code/safestream-player-example/package.json","includedInParent":true,"mtime":1605189636755},{"name":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/package.json","includedInParent":true,"mtime":1605186532048}],"generated":{"js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  this.on('partialdone', function(flushSource) {\n    destination.partialFlush(flushSource);\n  });\n\n  this.on('endedtimeline', function(flushSource) {\n    destination.endTimeline(flushSource);\n  });\n\n  this.on('reset', function(flushSource) {\n    destination.reset(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nStream.prototype.partialFlush = function(flushSource) {\n  this.trigger('partialdone', flushSource);\n};\n\nStream.prototype.endTimeline = function(flushSource) {\n  this.trigger('endedtimeline', flushSource);\n};\n\nStream.prototype.reset = function(flushSource) {\n  this.trigger('reset', flushSource);\n};\n\nmodule.exports = Stream;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mux.js/lib/utils/stream.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}}],"sources":{"node_modules/mux.js/lib/utils/stream.js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  this.on('partialdone', function(flushSource) {\n    destination.partialFlush(flushSource);\n  });\n\n  this.on('endedtimeline', function(flushSource) {\n    destination.endTimeline(flushSource);\n  });\n\n  this.on('reset', function(flushSource) {\n    destination.reset(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nStream.prototype.partialFlush = function(flushSource) {\n  this.trigger('partialdone', flushSource);\n};\n\nStream.prototype.endTimeline = function(flushSource) {\n  this.trigger('endedtimeline', flushSource);\n};\n\nStream.prototype.reset = function(flushSource) {\n  this.trigger('reset', flushSource);\n};\n\nmodule.exports = Stream;\n"},"lineCount":142}},"error":null,"hash":"5770541e24a1d393659fabefd4dc5303","cacheData":{"env":{}}}