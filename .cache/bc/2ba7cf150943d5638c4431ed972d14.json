{"id":"node_modules/mux.js/lib/mp4/probe.js","dependencies":[{"name":"/Users/mdelano/code/safestream-player-example/package.json","includedInParent":true,"mtime":1605189636755},{"name":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/package.json","includedInParent":true,"mtime":1605186532048},{"name":"../utils/bin","loc":{"line":12,"column":26},"parent":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/mp4/probe.js","resolved":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/utils/bin.js"},{"name":"../mp4/find-box.js","loc":{"line":13,"column":22},"parent":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/mp4/probe.js","resolved":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/mp4/find-box.js"},{"name":"../mp4/parse-type.js","loc":{"line":14,"column":24},"parent":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/mp4/probe.js","resolved":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/mp4/parse-type.js"},{"name":"../tools/parse-tfhd.js","loc":{"line":15,"column":24},"parent":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/mp4/probe.js","resolved":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/tools/parse-tfhd.js"},{"name":"../tools/parse-trun.js","loc":{"line":16,"column":24},"parent":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/mp4/probe.js","resolved":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/tools/parse-trun.js"},{"name":"../tools/parse-tfdt.js","loc":{"line":17,"column":24},"parent":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/mp4/probe.js","resolved":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/tools/parse-tfdt.js"}],"generated":{"js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar toHexString = require('../utils/bin').toHexString;\nvar findBox = require('../mp4/find-box.js');\nvar parseType = require('../mp4/parse-type.js');\nvar parseTfhd = require('../tools/parse-tfhd.js');\nvar parseTrun = require('../tools/parse-trun.js');\nvar parseTfdt = require('../tools/parse-tfdt.js');\nvar timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks,\n  getTimescaleFromMediaHeader;\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n * Determine the composition start, in seconds, for an MP4\n * fragment.\n *\n * The composition start time of a fragment can be calculated using the base\n * media decode time, composition time offset, and timescale, as follows:\n *\n * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n *\n * All of the aforementioned information is contained within a media fragment's\n * `traf` box, except for timescale info, which comes from the initialization\n * segment, so a track id (also contained within a `traf`) is also necessary to\n * associate it with a timescale\n *\n *\n * @param timescales {object} - a hash of track ids to timescale values.\n * @param fragment {Unit8Array} - the bytes of a media segment\n * @return {number} the composition start time for the fragment, in seconds\n **/\ncompositionStartTime = function(timescales, fragment) {\n  var trafBoxes = findBox(fragment, ['moof', 'traf']);\n  var baseMediaDecodeTime = 0;\n  var compositionTimeOffset = 0;\n  var trackId;\n\n  if (trafBoxes && trafBoxes.length) {\n    // The spec states that track run samples contained within a `traf` box are contiguous, but\n    // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n    // We will assume that they are, so we only need the first to calculate start time.\n    var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n    var trun = findBox(trafBoxes[0], ['trun'])[0];\n    var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n\n    if (tfhd) {\n      var parsedTfhd = parseTfhd(tfhd);\n\n      trackId = parsedTfhd.trackId;\n    }\n\n    if (tfdt) {\n      var parsedTfdt = parseTfdt(tfdt);\n\n      baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n    }\n\n    if (trun) {\n      var parsedTrun = parseTrun(trun);\n\n      if (parsedTrun.samples && parsedTrun.samples.length) {\n        compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n      }\n    }\n  }\n\n  // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n  // specified.\n  var timescale = timescales[trackId] || 90e3;\n\n  // return the composition start time, in seconds\n  return (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\ngetTimescaleFromMediaHeader = function(mdhd) {\n  // mdhd is a FullBox, meaning it will have its own version as the first byte\n  var version = mdhd[0];\n  var index = version === 0 ? 12 : 20;\n\n  return toUnsigned(\n    mdhd[index]     << 24 |\n    mdhd[index + 1] << 16 |\n    mdhd[index + 2] <<  8 |\n    mdhd[index + 3]\n  );\n};\n\n/**\n * Get all the video, audio, and hint tracks from a non fragmented\n * mp4 segment\n */\ngetTracks = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var tracks = [];\n\n  traks.forEach(function(trak) {\n    var track = {};\n    var tkhd = findBox(trak, ['tkhd'])[0];\n    var view, tkhdVersion;\n\n    // id\n    if (tkhd) {\n      view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      tkhdVersion = view.getUint8(0);\n\n      track.id = (tkhdVersion === 0) ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var hdlr = findBox(trak, ['mdia', 'hdlr'])[0];\n\n    // type\n    if (hdlr) {\n      var type = parseType(hdlr.subarray(8, 12));\n\n      if (type === 'vide') {\n        track.type = 'video';\n      } else if (type === 'soun') {\n        track.type = 'audio';\n      } else {\n        track.type = type;\n      }\n    }\n\n\n    // codec\n    var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n    if (stsd) {\n      var sampleDescriptions = stsd.subarray(8);\n      // gives the codec type string\n      track.codec = parseType(sampleDescriptions.subarray(4, 8));\n\n      var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n      var codecConfig, codecConfigType;\n\n      if (codecBox) {\n        // https://tools.ietf.org/html/rfc6381#section-3.3\n        if ((/^[a-z]vc[1-9]$/i).test(track.codec)) {\n          // we don't need anything but the \"config\" parameter of the\n          // avc1 codecBox\n          codecConfig = codecBox.subarray(78);\n          codecConfigType = parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n            track.codec += '.';\n\n            // left padded with zeroes for single digit hex\n            // profile idc\n            track.codec +=  toHexString(codecConfig[9]);\n            // the byte containing the constraint_set flags\n            track.codec += toHexString(codecConfig[10]);\n            // level idc\n            track.codec += toHexString(codecConfig[11]);\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'avc1.4d400d';\n          }\n        } else if ((/^mp4[a,v]$/i).test(track.codec)) {\n          // we do not need anything but the streamDescriptor of the mp4a codecBox\n          codecConfig = codecBox.subarray(28);\n          codecConfigType = parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n            track.codec += '.' + toHexString(codecConfig[19]);\n            // this value is only a single digit\n            track.codec += '.' + toHexString((codecConfig[20] >>> 2) & 0x3f).replace(/^0/, '');\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'mp4a.40.2';\n          }\n        } else {\n          // TODO: show a warning? for unknown codec type\n        }\n      }\n    }\n\n    var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (mdhd) {\n      track.timescale = getTimescaleFromMediaHeader(mdhd);\n    }\n\n    tracks.push(track);\n  });\n\n  return tracks;\n};\n\nmodule.exports = {\n  // export mp4 inspector's findBox and parseType for backwards compatibility\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  compositionStartTime: compositionStartTime,\n  videoTrackIds: getVideoTrackIds,\n  tracks: getTracks,\n  getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/mux.js/lib/mp4/probe.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}}],"sources":{"node_modules/mux.js/lib/mp4/probe.js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar toHexString = require('../utils/bin').toHexString;\nvar findBox = require('../mp4/find-box.js');\nvar parseType = require('../mp4/parse-type.js');\nvar parseTfhd = require('../tools/parse-tfhd.js');\nvar parseTrun = require('../tools/parse-trun.js');\nvar parseTfdt = require('../tools/parse-tfdt.js');\nvar timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks,\n  getTimescaleFromMediaHeader;\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n * Determine the composition start, in seconds, for an MP4\n * fragment.\n *\n * The composition start time of a fragment can be calculated using the base\n * media decode time, composition time offset, and timescale, as follows:\n *\n * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n *\n * All of the aforementioned information is contained within a media fragment's\n * `traf` box, except for timescale info, which comes from the initialization\n * segment, so a track id (also contained within a `traf`) is also necessary to\n * associate it with a timescale\n *\n *\n * @param timescales {object} - a hash of track ids to timescale values.\n * @param fragment {Unit8Array} - the bytes of a media segment\n * @return {number} the composition start time for the fragment, in seconds\n **/\ncompositionStartTime = function(timescales, fragment) {\n  var trafBoxes = findBox(fragment, ['moof', 'traf']);\n  var baseMediaDecodeTime = 0;\n  var compositionTimeOffset = 0;\n  var trackId;\n\n  if (trafBoxes && trafBoxes.length) {\n    // The spec states that track run samples contained within a `traf` box are contiguous, but\n    // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n    // We will assume that they are, so we only need the first to calculate start time.\n    var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n    var trun = findBox(trafBoxes[0], ['trun'])[0];\n    var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n\n    if (tfhd) {\n      var parsedTfhd = parseTfhd(tfhd);\n\n      trackId = parsedTfhd.trackId;\n    }\n\n    if (tfdt) {\n      var parsedTfdt = parseTfdt(tfdt);\n\n      baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n    }\n\n    if (trun) {\n      var parsedTrun = parseTrun(trun);\n\n      if (parsedTrun.samples && parsedTrun.samples.length) {\n        compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n      }\n    }\n  }\n\n  // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n  // specified.\n  var timescale = timescales[trackId] || 90e3;\n\n  // return the composition start time, in seconds\n  return (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\ngetTimescaleFromMediaHeader = function(mdhd) {\n  // mdhd is a FullBox, meaning it will have its own version as the first byte\n  var version = mdhd[0];\n  var index = version === 0 ? 12 : 20;\n\n  return toUnsigned(\n    mdhd[index]     << 24 |\n    mdhd[index + 1] << 16 |\n    mdhd[index + 2] <<  8 |\n    mdhd[index + 3]\n  );\n};\n\n/**\n * Get all the video, audio, and hint tracks from a non fragmented\n * mp4 segment\n */\ngetTracks = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var tracks = [];\n\n  traks.forEach(function(trak) {\n    var track = {};\n    var tkhd = findBox(trak, ['tkhd'])[0];\n    var view, tkhdVersion;\n\n    // id\n    if (tkhd) {\n      view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      tkhdVersion = view.getUint8(0);\n\n      track.id = (tkhdVersion === 0) ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var hdlr = findBox(trak, ['mdia', 'hdlr'])[0];\n\n    // type\n    if (hdlr) {\n      var type = parseType(hdlr.subarray(8, 12));\n\n      if (type === 'vide') {\n        track.type = 'video';\n      } else if (type === 'soun') {\n        track.type = 'audio';\n      } else {\n        track.type = type;\n      }\n    }\n\n\n    // codec\n    var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n    if (stsd) {\n      var sampleDescriptions = stsd.subarray(8);\n      // gives the codec type string\n      track.codec = parseType(sampleDescriptions.subarray(4, 8));\n\n      var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n      var codecConfig, codecConfigType;\n\n      if (codecBox) {\n        // https://tools.ietf.org/html/rfc6381#section-3.3\n        if ((/^[a-z]vc[1-9]$/i).test(track.codec)) {\n          // we don't need anything but the \"config\" parameter of the\n          // avc1 codecBox\n          codecConfig = codecBox.subarray(78);\n          codecConfigType = parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n            track.codec += '.';\n\n            // left padded with zeroes for single digit hex\n            // profile idc\n            track.codec +=  toHexString(codecConfig[9]);\n            // the byte containing the constraint_set flags\n            track.codec += toHexString(codecConfig[10]);\n            // level idc\n            track.codec += toHexString(codecConfig[11]);\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'avc1.4d400d';\n          }\n        } else if ((/^mp4[a,v]$/i).test(track.codec)) {\n          // we do not need anything but the streamDescriptor of the mp4a codecBox\n          codecConfig = codecBox.subarray(28);\n          codecConfigType = parseType(codecConfig.subarray(4, 8));\n\n          if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n            track.codec += '.' + toHexString(codecConfig[19]);\n            // this value is only a single digit\n            track.codec += '.' + toHexString((codecConfig[20] >>> 2) & 0x3f).replace(/^0/, '');\n          } else {\n            // TODO: show a warning that we couldn't parse the codec\n            // and are using the default\n            track.codec = 'mp4a.40.2';\n          }\n        } else {\n          // TODO: show a warning? for unknown codec type\n        }\n      }\n    }\n\n    var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (mdhd) {\n      track.timescale = getTimescaleFromMediaHeader(mdhd);\n    }\n\n    tracks.push(track);\n  });\n\n  return tracks;\n};\n\nmodule.exports = {\n  // export mp4 inspector's findBox and parseType for backwards compatibility\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  compositionStartTime: compositionStartTime,\n  videoTrackIds: getVideoTrackIds,\n  tracks: getTracks,\n  getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n};\n"},"lineCount":366}},"error":null,"hash":"73eac7506e23e054e9890129d70759f6","cacheData":{"env":{}}}