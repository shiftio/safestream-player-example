{"id":"node_modules/mux.js/lib/m2ts/probe.js","dependencies":[{"name":"/Users/mdelano/code/safestream-player-example/package.json","includedInParent":true,"mtime":1605189636755},{"name":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/package.json","includedInParent":true,"mtime":1605186532048},{"name":"./stream-types.js","loc":{"line":11,"column":26},"parent":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/m2ts/probe.js","resolved":"/Users/mdelano/code/safestream-player-example/node_modules/mux.js/lib/m2ts/stream-types.js"}],"generated":{"js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mux.js/lib/m2ts/probe.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}}],"sources":{"node_modules/mux.js/lib/m2ts/probe.js":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n"},"lineCount":288}},"error":null,"hash":"5000a4b3c08c6dd0787edbc74364bb9b","cacheData":{"env":{}}}